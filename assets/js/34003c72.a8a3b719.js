"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1635],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return d}});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),s=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=s(e.components);return a.createElement(l.Provider,{value:t},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,p=u(e,["components","mdxType","originalType","parentName"]),m=s(n),h=r,d=m["".concat(l,".").concat(h)]||m[h]||c[h]||i;return n?a.createElement(d,o(o({ref:t},p),{},{components:n})):a.createElement(d,o({ref:t},p))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=h;var u={};for(var l in t)hasOwnProperty.call(t,l)&&(u[l]=t[l]);u.originalType=e,u[m]="string"==typeof e?e:r,o[1]=u;for(var s=2;s<i;s++)o[s]=n[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},42274:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return l},default:function(){return h},frontMatter:function(){return u},metadata:function(){return s},toc:function(){return m}});var a=n(87462),r=n(63366),i=(n(67294),n(3905)),o=["components"],u={id:"queue_config",title:"Queue Config"},l=void 0,s={unversionedId:"configuration/queue_config",id:"version-0.8.0/configuration/queue_config",title:"Queue Config",description:"\x3c!--",source:"@site/versioned_docs/version-0.8.0/configuration/queue_config.md",sourceDirName:"configuration",slug:"/configuration/queue_config",permalink:"/docs/0.8.0/configuration/queue_config",draft:!1,tags:[],version:"0.8.0",frontMatter:{id:"queue_config",title:"Queue Config"},sidebar:"version-0.8.0/docs",previous:{title:"Environment Setup",permalink:"/docs/0.8.0/setup/env_setup"},next:{title:"Placement Rules",permalink:"/docs/0.8.0/configuration/placement_rules"}},p={},m=[{value:"Configuration",id:"configuration",level:2},{value:"Partitions",id:"partitions",level:2},{value:"Queues",id:"queues",level:3},{value:"Placement rules",id:"placement-rules",level:3},{value:"Limits",id:"limits",level:3},{value:"Resources",id:"resources",level:3}],c={toc:m};function h(e){var t=e.components,n=(0,r.Z)(e,o);return(0,i.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"yunikorn-partition-and-queue-configuration"},"YuniKorn Partition and Queue Configuration"),(0,i.kt)("p",null,"The basis for the queue configuration is given in the ",(0,i.kt)("a",{parentName:"p",href:"/docs/0.8.0/setup/configure_scheduler#queue-configuration"},"scheduler design document"),"."),(0,i.kt)("p",null,"This document provides the generic queue configuration.\nIt references both the ",(0,i.kt)("a",{parentName:"p",href:"/docs/0.8.0/configuration/acls"},"Access control lists")," and ",(0,i.kt)("a",{parentName:"p",href:"/docs/0.8.0/configuration/placement_rules"},"placement rule")," documentation."),(0,i.kt)("p",null,"This document explains how to create the partition and queue configuration for the scheduler with examples."),(0,i.kt)("p",null,"The scheduler relies on the shim to reliably provide user information as part of the application submission.\nIn the current shim there is no reliable way to identify the user and the groups the user belongs to.\nThe user and group information provided by the shim is incomplete in the best case.\nThis shim limitation impacts the behaviour of user based limits and access control in the scheduler.\nThe current implementation only provides the framework in the scheduler and will not be fully functional until the shim changes are added. "),(0,i.kt)("h2",{id:"configuration"},"Configuration"),(0,i.kt)("p",null,"The configuration file for the scheduler that is described here only provides the configuration for the partitions and queues."),(0,i.kt)("p",null,"By default we use the file called ",(0,i.kt)("inlineCode",{parentName:"p"},"queues.yaml")," in our deployments.\nThe filename can be changed via the command line flag ",(0,i.kt)("inlineCode",{parentName:"p"},"policyGroup")," of the scheduler.\nChanging the filename must be followed by corresponding changes in the deployment details, either the ",(0,i.kt)("inlineCode",{parentName:"p"},"configmap")," or the file included in the docker container."),(0,i.kt)("p",null,"The example file for the configuration is located in ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/apache/incubator-yunikorn-core/blob/master/config/queues.yaml"},"config/queues.yaml"),".  "),(0,i.kt)("h2",{id:"partitions"},"Partitions"),(0,i.kt)("p",null,"Partitions are the top level of the scheduler configuration.\nThere can be more than one partition defined in the configuration."),(0,i.kt)("p",null,"Basic structure for the partition definition in the configuration:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"partitions:\n  - name: <name of the 1st partition>\n  - name: <name of the 2nd partition>\n")),(0,i.kt)("p",null,"The default name for the partition is ",(0,i.kt)("inlineCode",{parentName:"p"},"default"),".\nThe partition definition contains the full configuration for the scheduler for a particular shim.\nEach shim uses its own unique partition."),(0,i.kt)("p",null,"The partition must have at least the following keys defined:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"name"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#queues"},"queues"))),(0,i.kt)("p",null,"The queues configuration is explained below."),(0,i.kt)("p",null,"Optionally the following keys can be defined for a partition:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#placement-rules"},"placementrules")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#limits"},"limits")),(0,i.kt)("li",{parentName:"ul"},"preemption")),(0,i.kt)("p",null,"Placement rules and limits are explained in their own chapters\nThe preemption key can currently have only one sub key: ",(0,i.kt)("em",{parentName:"p"},"enabled"),".\nThis boolean value defines the preemption behaviour for the whole partition."),(0,i.kt)("p",null,"The default value for ",(0,i.kt)("em",{parentName:"p"},"enabled")," is ",(0,i.kt)("em",{parentName:"p"},"false"),".\nAllowed values: ",(0,i.kt)("em",{parentName:"p"},"true")," or ",(0,i.kt)("em",{parentName:"p"},"false"),", any other value will cause a parse error."),(0,i.kt)("p",null,"Example ",(0,i.kt)("inlineCode",{parentName:"p"},"partition")," yaml entry with ",(0,i.kt)("em",{parentName:"p"},"preemption")," flag:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"partitions:\n  - name: <name of the partition>\n    preemption:\n      enabled: true\n")),(0,i.kt)("p",null,"NOTE:\nCurrently the Kubernetes unique shim does not support any other partition than the ",(0,i.kt)("inlineCode",{parentName:"p"},"default")," partition..\nThis has been logged as an ",(0,i.kt)("a",{parentName:"p",href:"https://issues.apache.org/jira/browse/YUNIKORN-22"},"jira")," for the shim."),(0,i.kt)("h3",{id:"queues"},"Queues"),(0,i.kt)("p",null,"The ",(0,i.kt)("em",{parentName:"p"},"queues")," entry is the main configuration element.\nIt defines a hierarchical structure for the queues."),(0,i.kt)("p",null,"It can have a ",(0,i.kt)("inlineCode",{parentName:"p"},"root")," queue defined but it is not a required element.\nIf the ",(0,i.kt)("inlineCode",{parentName:"p"},"root")," queue is not defined the configuration parsing will insert the root queue for consistency.\nThe insertion of the root queue is triggered by:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"If the configuration has more than one queue defined at the top level a root queue is inserted."),(0,i.kt)("li",{parentName:"ul"},"If there is only one queue defined at the top level and it is not called ",(0,i.kt)("inlineCode",{parentName:"li"},"root")," a root queue is inserted.  ")),(0,i.kt)("p",null,"The defined queue or queues will become a child queue of the inserted ",(0,i.kt)("inlineCode",{parentName:"p"},"root")," queue."),(0,i.kt)("p",null,"Basic ",(0,i.kt)("inlineCode",{parentName:"p"},"queues")," yaml entry with sub queue:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"queues:\n- name: <name of the queue>\n  queues:\n  - name: <name of the queue>\n")),(0,i.kt)("p",null,"Supported parameters for the queues:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"name"),(0,i.kt)("li",{parentName:"ul"},"parent"),(0,i.kt)("li",{parentName:"ul"},"queues"),(0,i.kt)("li",{parentName:"ul"},"properties"),(0,i.kt)("li",{parentName:"ul"},"adminacl"),(0,i.kt)("li",{parentName:"ul"},"submitacl"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#resources"},"resources")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#limits"},"limits"))),(0,i.kt)("p",null,"Each queue must have a ",(0,i.kt)("em",{parentName:"p"},"name"),".\nThe name of a queue must be unique at the level that the queue is defined.\nSince the queue structure is fully hierarchical queues at different points in the hierarchy may have the same name.\nAs an example: the queue structure ",(0,i.kt)("inlineCode",{parentName:"p"},"root.testqueue")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"root.parent.testqueue"),' is a valid structure.\nA queue cannot contain a dot "." character as that character is used to separate the queues in the hierarchy.\nIf the name is not unique for the queue in the configuration or contains a dot a parsing error is generated and the configuration is rejected. '),(0,i.kt)("p",null,"Queues in the structure will automatically get a type assigned.\nThe type of the queue is based on the fact that the queue has children or sub queues.\nThe two types of queues are:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"parent"),(0,i.kt)("li",{parentName:"ul"},"leaf")),(0,i.kt)("p",null,"Applications can only be assigned to a ",(0,i.kt)("em",{parentName:"p"},"leaf")," queue.\nA queue that has a child or sub queue in the configuration is automatically a ",(0,i.kt)("em",{parentName:"p"},"parent")," queue.\nIf a queue does not have a sub the queue in the configuration it is a ",(0,i.kt)("em",{parentName:"p"},"leaf")," queue, unless the ",(0,i.kt)("inlineCode",{parentName:"p"},"parent")," parameter is set to ",(0,i.kt)("em",{parentName:"p"},"true"),".\nTrying to override a ",(0,i.kt)("em",{parentName:"p"},"parent")," queue type in the configuration will cause a parsing error of the configuration.   "),(0,i.kt)("p",null,"Sub queues for a parent queue are defined under the ",(0,i.kt)("inlineCode",{parentName:"p"},"queues")," entry.\nThe ",(0,i.kt)("inlineCode",{parentName:"p"},"queues")," entry is a recursive entry for a queue level and uses the exact same set of parameters.  "),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"properties")," parameter is a simple key value pair list.\nThe list provides a simple set of properties for the queue.\nThere are no limitations on the key or value values, anything is allowed.\nCurrently the property list is not used in the scheduler and is only provided for future expansion like the option to turn on or off preemption on a queue or define a sorting order specific for a queue.  "),(0,i.kt)("p",null,"Access to a queue is set via the ",(0,i.kt)("inlineCode",{parentName:"p"},"adminacl")," for administrative actions and for submitting an application via the ",(0,i.kt)("inlineCode",{parentName:"p"},"submitacl")," entry.\nACLs are documented in the ",(0,i.kt)("a",{parentName:"p",href:"/docs/0.8.0/configuration/acls"},"Access control lists")," document."),(0,i.kt)("p",null,"Queue resource limits are set via the ",(0,i.kt)("inlineCode",{parentName:"p"},"resources")," parameter.\nUser and group limits are set via the ",(0,i.kt)("inlineCode",{parentName:"p"},"limits")," parameter.\nAs both entries are complex configuration entries they are explained in ",(0,i.kt)("a",{parentName:"p",href:"#resources"},"resources")," and ",(0,i.kt)("a",{parentName:"p",href:"#limits"},"limits")," below."),(0,i.kt)("p",null,"An example configuration of a queue ",(0,i.kt)("inlineCode",{parentName:"p"},"root.namespaces")," as a ",(0,i.kt)("em",{parentName:"p"},"parent")," queue with limits:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"partitions:\n  - name: default\n    queues:\n      - name: namespaces\n        parent: true\n        resources:\n          guaranteed:\n            {memory: 1000, vcore: 10}\n          max:\n            {memory: 10000, vcore: 100}\n")),(0,i.kt)("h3",{id:"placement-rules"},"Placement rules"),(0,i.kt)("p",null,"The placement rules are defined and documented in the ",(0,i.kt)("a",{parentName:"p",href:"/docs/0.8.0/configuration/placement_rules"},"placement rule")," document."),(0,i.kt)("p",null,"Each partition can have only one set of placement rules defined.\nIf no rules are defined the placement manager is not started and each application ",(0,i.kt)("em",{parentName:"p"},"must")," have a queue set on submit.  "),(0,i.kt)("h3",{id:"limits"},"Limits"),(0,i.kt)("p",null,"Limits define a set of limit objects for a partition or queue.\nIt can be set on either the partition or on a queue at any level."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"limits:\n  - limit: <description>\n  - limit: <description>\n")),(0,i.kt)("p",null,"A limit object is a complex configuration object.\nIt defines one limit for a set of users and or groups.\nMultiple independent limits can be set as part of one ",(0,i.kt)("inlineCode",{parentName:"p"},"limits")," entry on a queue or partition.\nUsers and or groups that are not part of the limit setting will not be limited."),(0,i.kt)("p",null,"A sample limits entry:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'limits:\n  - limit: <description>\n    users:\n    - <user name or "*"">\n    - <user name>\n    groups:\n    - <group name or "*"">\n    - <group name>\n    maxapplications: <1..maxint>\n    maxresources:\n      <resource name 1>: <0..maxint>\n      <resource name 2>: <0..maxint>\n')),(0,i.kt)("p",null,"Limits are applied recursively in the case of a queue limit.\nThis means that a limit on the ",(0,i.kt)("inlineCode",{parentName:"p"},"root")," queue is an overall limit in the cluster for the user or group.\nA ",(0,i.kt)("inlineCode",{parentName:"p"},"root")," queue limit is thus also equivalent with the ",(0,i.kt)("inlineCode",{parentName:"p"},"partition")," limit."),(0,i.kt)("p",null,"The limit object parameters:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"limit"),(0,i.kt)("li",{parentName:"ul"},"users"),(0,i.kt)("li",{parentName:"ul"},"groups"),(0,i.kt)("li",{parentName:"ul"},"maxapplications"),(0,i.kt)("li",{parentName:"ul"},"maxresources")),(0,i.kt)("p",null,"The ",(0,i.kt)("em",{parentName:"p"},"limit")," parameter is an optional description of the limit entry.\nIt is not used for anything but making the configuration understandable and readable. "),(0,i.kt)("p",null,"The ",(0,i.kt)("em",{parentName:"p"},"users")," and ",(0,i.kt)("em",{parentName:"p"},"groups")," that can be configured can be one of two types:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},'a star "*" '),(0,i.kt)("li",{parentName:"ul"},"a list of users or groups.")),(0,i.kt)("p",null,'If the entry for users or groups contains more than one (1) entry it is always considered a list of either users or groups.\nThe star "*" is the wildcard character and matches all users or groups.\nDuplicate entries in the lists are ignored and do not cause a parsing error.\nSpecifying a star beside other list elements is not allowed.'),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"maxapplications")," is an unsigned integer value, larger than 1, which allows you to limit the number of running applications for the configured user or group.\nSpecifying a zero maximum applications limit is not allowed as it would implicitly deny access.\nDenying access must be handled via the ACL entries.  "),(0,i.kt)("p",null,"The ",(0,i.kt)("em",{parentName:"p"},"maxresources")," parameter can be used to specify a limit for one or more resources.\nThe ",(0,i.kt)("em",{parentName:"p"},"maxresources")," uses the same syntax as the ",(0,i.kt)("a",{parentName:"p",href:"#resources"},"resources")," parameter for the queue.\nResources that are not specified in the list are not limited.\nA resource limit can be set to 0.\nThis prevents the user or group from requesting the specified resource even though the queue or partition has that specific resource available.",(0,i.kt)("br",{parentName:"p"}),"\n","Specifying an overall resource limit of zero is not allowed.\nThis means that at least one of the resources specified in the limit must be greater than zero."),(0,i.kt)("p",null,"If a resource is not available on a queue the maximum resources on a queue definition should be used.\nSpecifying a limit that is effectively zero, ",(0,i.kt)("em",{parentName:"p"},"maxapplications")," is zero and all resource limits are zero, is not allowed and will cause a parsing error."),(0,i.kt)("p",null,"A limit is per user or group.\nIt is ",(0,i.kt)("em",{parentName:"p"},"not")," a combined limit for all the users or groups together."),(0,i.kt)("p",null,"As an example: "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'limit: "example entry"\nmaxapplications: 10\nusers:\n- sue\n- bob\n')),(0,i.kt)("p",null,"In this case both the users ",(0,i.kt)("inlineCode",{parentName:"p"},"sue")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"bob")," are allowed to run 10 applications."),(0,i.kt)("h3",{id:"resources"},"Resources"),(0,i.kt)("p",null,"The resources entry for the queue can set the ",(0,i.kt)("em",{parentName:"p"},"guaranteed")," and or ",(0,i.kt)("em",{parentName:"p"},"maximum")," resources for a queue.\nResource limits are checked recursively.\nThe usage of a leaf queue is the sum of all assigned resources for that queue.\nThe usage of a parent queue is the sum of the usage of all queues, leafs and parents, below the parent queue. "),(0,i.kt)("p",null,"The root queue, when defined, cannot have any resource limit set.\nIf the root queue has any limit set a parsing error will occur.\nThe maximum resource limit for the root queue is automatically equivalent to the cluster size.\nThere is no guaranteed resource setting for the root queue."),(0,i.kt)("p",null,"Maximum resources when configured place a hard limit on the size of all allocations that can be assigned to a queue at any point in time.\nA maximum resource can be set to 0 which makes the resource not available to the queue.\nGuaranteed resources are used in calculating the share of the queue and during allocation.\nIt is used as one of the inputs for deciding which queue to give the allocation to.\nPreemption uses the ",(0,i.kt)("em",{parentName:"p"},"guaranteed")," resource of a queue as a base which a queue cannot go below."),(0,i.kt)("p",null,"Basic ",(0,i.kt)("inlineCode",{parentName:"p"},"resources")," yaml entry:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"resources:\n  guaranteed:\n    <resource name 1>: <0..maxint>\n    <resource name 2>: <0..maxint>\n  max:\n    <resource name 1>: <0..maxint>\n    <resource name 2>: <0..maxint>\n")),(0,i.kt)("p",null,"Resources that are not specified in the list are not limited, for max resources, or guaranteed in the case of guaranteed resources."))}h.isMDXComponent=!0}}]);